tmax = 0.5;
fd = 512;
f1 = 5;
f2 = 50;
fd2 = fd/2;
t = 0:1./fd:tmax;
signal1 = sin(2*pi*t*f1);
signal2 = sin(2*pi*t*f2);
signal = signal1 .* signal2;
plot(signal, 'b');
hold on
plot(signal1, 'r');
plot(-signal1, 'r');
hold off
title('Signal');
print 'signal/am.png';
spectre = fft(signal,fd);
f = 1000*(0:fd2)./(2*fd);
spectre = 2 * sqrt(spectre.*conj(spectre))./fd2;
plot(f,spectre(1:fd2 + 1), 'b')
xlim([0 100]);
title('Spectre');
xlabel('Frequency (Hz)');
print 'spectre/am.png';

В начале кода задаются параметры сигнала: максимальное время tmax, частота дискретизации fd, частоты несущей f1 и модулирующей f2. Затем вычисляется время t с шагом 1/fd от 0 до tmax, 
формируются несущий сигнал signal1 и модулирующий сигнал signal2, и вычисляется модулированный сигнал signal как произведение несущего и модулирующего сигналов.

Далее строится график модулированного сигнала с помощью функции plot, и добавляются графики несущего и модулирующего сигналов. Заголовок графика задается с помощью функции title, а 
сохранение графика в файл выполняется с помощью функции print.

Затем вычисляется преобразование Фурье для модулированного сигнала с помощью функции fft, и вычисляется частота f с шагом 1000/fd от 0 до fd/2. Затем вычисляется модуль спектра с помощью выражения
2 \* sqrt(spectre .\* conj(spectre)) ./ fd2, и строится график спектра с помощью функции plot. 
Ось абсцисс задается с помощью функции xlabel, а заголовок графика - с помощью функции title. Сохранение графика в файл выполняется с помощью функции print.
